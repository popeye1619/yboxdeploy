{"version":3,"sources":["pages/allPosts.js","components/NewPostInput.js","actions/index.js","pages/newPost.js","reducers/postsReducer.js","components/navbar.js","pages/index.js","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["AllPosts","newpost","useSelector","state","posts","slice","reverse","style","textAlign","map","note","padding","body","Container","styled","div","Text","Input","input","NewPostInput","addPost","React","useState","post","setPost","border","onChange","e","target","value","name","type","placeholder","marginTop","onClick","ADD_POST","SET_POSTS","setPosts","payload","NewPost","dispatch","useDispatch","initialState","List","section","Navbar","textDecoration","to","Index","loading","setLoading","useEffect","a","fetch","then","res","json","path","component","NewPosts","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42538485.chunk.js","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst AllPosts = () => {\n  const posts = useSelector((state) => state.posts);\n  const newpost = posts.slice().reverse();\n\n  return (\n    <>\n      <h1 style={{ textAlign: 'center' }}>All Posts</h1>\n      <div>\n        {newpost.map((note) => {\n          return <div style={{ textAlign: 'center'}} key={note}><div style={{ padding: '1rem 2rem 1rem 2rem' }}>{note.body}</div></div>;\n        })}\n      </div>\n    </>\n  );\n}\n\nexport default AllPosts;","import React from \"react\";\nimport styled from 'styled-components';\n\nconst Container = styled.div`\nbackground: #f5f5f7;\nwidth: 100%;\n@media screen and (min-width: 768px){\nwidth: 50%;\n}\n@media only screen \nand (min-device-width : 768px) \nand (max-device-width : 1024px){ \n  width: 100%;\n}\nmargin: auto;\nborder-radius: 10px;\n`;\n\nconst Text = styled.div`\ntext-align: left;\nfont-size: 1rem;\n@media screen and (min-width: 768px){\n  font-size: 2.5rem;\n}\npadding: 1rem;\n`;\n\n\n\nconst Input = styled.input`\nfont-family: 'Work Sans', sans-serif;\n     width: 100%;     \n    height: 2rem;\n    border-radius: 5px;\n    padding: 0.5rem;\n    font-size: 1.5rem;\n  outline: none;\n        border: none;\n        background: #e8e8e8;\n`;\n\n\nexport const NewPostInput = ({ addPost }) => {\n  const [post, setPost] = React.useState({\n    body: ''\n  });\n  \n\n  const updatePost = (e) => {\n    setPost({\n      ...post,\n      body: e.target.value\n    })\n  };\n\n  const onAddPostClick = () => {\n    addPost(post);\n  };\n\n\n  return (\n    <Container>\n      <Text>New Post </Text>\n      <hr style={{ border: '0.1px solid lightgrey' }} />\n      <div style={{ padding: '1rem 2rem 1rem 1rem' }}>\n        <Input\n          onChange={updatePost}\n          value={post.name}\n          type=\"text\"\n          name=\"posts\"\n          placeholder=\"Note\"\n        />\n        <button style={{marginTop: '1rem'}} onClick={onAddPostClick}>Add Post</button>\n      </div>\n    </Container>\n\n  );\n};","export const ADD_POST = \"ADD_POST\";\nexport const SET_POSTS = \"SET_POSTS\";\n\nexport const addPost = (post) => ({\n  type: ADD_POST,\n  payload: post,\n});\n\nexport const setPosts = (posts) => ({\n  type: SET_POSTS,\n  payload: posts,\n});","import { NewPostInput } from \"../components/NewPostInput\";\nimport { useDispatch } from \"react-redux\";\nimport { addPost } from \"../actions/index\";\n\nconst NewPost = () => {\n  const dispatch = useDispatch();\n  const onAddPost = (post) => {\n    dispatch(addPost(post));\n  };\n\n  return (\n    <>\n    <br/>\n      <NewPostInput addPost={onAddPost} />\n    </>\n  );\n}\n\nexport default NewPost;","import { ADD_POST, setPosts, SET_POSTS } from \"../actions/index\"\n\nconst initialState = {\n  posts: []\n}\n\nexport const notesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST: {\n      return { ...state, posts: [...state.posts, action.payload] }\n    }\n    case SET_POSTS: {\n      return { ...state, posts: action.payload }\n    }\n    default:\n      return state\n  }\n}\n\nexport const loadPosts = () => async (dispatch) => {\n  const posts = await fetch(\"https://jsonplaceholder.typicode.com/posts\").then(res => res.json())\n  dispatch(setPosts(posts))\n} ","import React from 'react';\nimport styled from 'styled-components';\nimport {Link} from 'react-router-dom';\n\nconst Container=styled.div`\nposition: fixed;\nwidth: 100%;\nbackground-color: lightgrey;\ndisplay: flex;\njustify-content: space-around;\nalign-items: center;\nheight: 3rem;\n`;\n\nconst List=styled.section`\ncursor: pointer;\ncolor: black;\n&:hover{\n    text-decoration: underline;\n}\n`;\n\nconst Navbar=()=>{\n    return (\n     <Container>\n         <Link  style={{ textDecoration: 'none' }} to=\"/allposts\">\n         <List>ALL POSTS</List>\n         </Link>\n         <Link  style={{ textDecoration: 'none' }} to=\"/newpost\">\n         <List>NEW POST</List>\n         </Link>\n     </Container>\n    );\n}\n\nexport default Navbar;","import React, { useState, useEffect } from 'react';\nimport AllPosts from './allPosts';\nimport NewPosts from './newPost';\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { loadPosts } from \"../reducers/postsReducer\";\nimport Navbar from '../components/navbar';\n\nconst Index = () => {\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(true);\n    useEffect(() => {\n        dispatch(loadPosts());\n        setLoading(false);\n    }, [])\n    return (\n        <Router>\n            <div>\n                <Navbar />\n                <br/>\n                <br/>\n                {loading ? <div><h1 style={{ textAlign: 'center' }}>...LOADING</h1></div> : <div><Route path=\"/allposts\" component={AllPosts}></Route> </div>}\n                <Route path=\"/newpost\" component={NewPosts}></Route>\n            </div>\n        </Router>\n    )\n}\n\nexport default Index;","import Index from './pages/index';\n\nfunction App() {\n  return (\n    <div >\n      <Index></Index>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, applyMiddleware } from 'redux'\nimport {notesReducer} from '../reducers/postsReducer'\nimport thunk from 'redux-thunk'\n\nexport const store = createStore(notesReducer, applyMiddleware(thunk))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\"\nimport {store} from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n       <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}